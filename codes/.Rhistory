# make columns with average HCT116 1% LFC so can use as hit cutoff
df_dedup_allcol$HCT1average_LFC= rowMeans(df_dedup_allcol[,c("HCT116_r2_2_0_lfc","HCT116_r1_2_0_lfc")])
#extract A375 peptides that are hits and don't have CCDS overlap
HCT116_1_candidates=df_dedup_allcol[df_dedup_allcol$any_ccds_overlap == FALSE & df_dedup_allcol$HCT1average_LFC>=1 | df_dedup_allcol$any_ccds_overlap == FALSE & df_dedup_allcol$HCT1average_LFC <= -1, ]
#write.table(HCT116_1_candidates, file = 'HCT116_1_candidates.txt')
#HCT116 0%-----
# make columns with average HCT116 0% LFC so can use as hit cutoff
df_dedup_allcol$HCT0average_LFC= rowMeans(df_dedup_allcol[,c("HCT116_r2_3_0_lfc","HCT116_r1_3_0_lfc")])
#extract A375 peptides that are hits and don't have CCDS overlap
HCT116_0_candidates=df_dedup_allcol[df_dedup_allcol$any_ccds_overlap == FALSE & df_dedup_allcol$HCT0average_LFC>=1 | df_dedup_allcol$any_ccds_overlap == FALSE & df_dedup_allcol$HCT0average_LFC<= -1, ]
#write.table(HCT116_0_candidates, file = 'HCT116_0_candidates.txt')
#pdf("A375_10FBS_pvalue_R1_candidates_top6.pdf")
ggplot(df, aes(x=A375_r1_1_0_lfc, y=-log10(A375_r1_1_0_neg.p.value), label=new_id)) +
rasterise(geom_point(color = "#cccccc", alpha = 0.8, size = 2), dpi = 300) +
geom_point(data = df_no_controls %>% filter( rowMeans(df_no_controls[,c("A375_r2_1_0_lfc","A375_r1_1_0_lfc")]) <= -1 |rowMeans(df_no_controls[,c("A375_r2_1_0_lfc","A375_r1_1_0_lfc")]) >= 1), color = "lightskyblue3", size = 2)+
geom_point(data = df_no_controls%>% filter(new_id %in% candidates), color = "royalblue4", size = 2) +
geom_point(data = df_no_controls%>% filter(new_id %in% top_6), color = "firebrick3", size = 2) +
geom_label_repel(data = df %>% filter(new_id %in% top_6), color = "firebrick3", min.segment.length = 0) +
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 1", y= "-log10(p-value)")+
coord_cartesian(xlim = c(-5, 5), ylim = c(0, 7))+
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "#777777",linewidth=0.1) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = c(-log10(0.05)), linetype = "dashed", color = "#777777",linewidth=0.1) +
coord_cartesian(xlim = c(-5, 5), ylim = c(0, 7)) +
labs(title = "A375 R1 volcano plot", subtitle = "Top 6 candidates labeled")
#dev.off()
#pdf("A375_10FBS_pvalue_R2_candidates_top6.pdf")
ggplot(df, aes(x=A375_r2_1_0_lfc, y=-log10(A375_r2_1_0_neg.p.value), label=new_id)) +
rasterise(geom_point(color = "#cccccc", alpha = 0.8, size = 2), dpi = 300) +
geom_point(data = df_no_controls %>% filter( rowMeans(df_no_controls[,c("A375_r2_1_0_lfc","A375_r1_1_0_lfc")]) <= -1 |rowMeans(df_no_controls[,c("A375_r2_1_0_lfc","A375_r1_1_0_lfc")]) >= 1), color = "lightskyblue3", size = 2)+
geom_point(data = df_no_controls%>% filter(new_id %in% candidates), color = "royalblue4", size = 2) +
geom_point(data = df_no_controls%>% filter(new_id %in% top_6), color = "firebrick3", size = 2) +
geom_label_repel(data = df %>% filter(new_id %in% top_6), color = "firebrick3", min.segment.length = 0) +
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "-log10(p-value)")+
coord_cartesian(xlim = c(-5, 5), ylim = c(0, 7))+
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "#777777",linewidth=0.1) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = c(-log10(0.05)), linetype = "dashed", color = "#777777",linewidth=0.1) +
coord_cartesian(xlim = c(-5, 5), ylim = c(0, 7)) +
labs(title = "A375 R1 volcano plot", subtitle = "Top 6 candidates labeled")
#dev.off()
library(ggrastr)
# make raster-----
logfc_guides <- list(
geom_hline(yintercept = c(-1, 1), linetype = "dotted", color = "#777777", linewidth=0.1),
geom_vline(xintercept = c(-1, 1), linetype = "dotted", color = "#777777",linewidth=0.1),
geom_hline(yintercept = c(0), linewidth=0.1),
geom_vline(xintercept = c(0),linewidth=0.1))
# essentiality plots-----
##pdf('Screens_correlation.pdf')
ggplot(df, aes(x=A375_r2_1_0_lfc, y=A375_r1_1_0_lfc,label=new_id)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "R")), color = "goldenrod2", size = 2), dpi = 300)+
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "C")), color = "firebrick3", size = 2), dpi = 300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "A375 10% FBS",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5))+
geom_text(x=4.5,y=4.5,label=(round(cor(df$A375_r2_1_0_lfc,df$A375_r1_1_0_lfc),digits=2)), size=5, color="black")
ggplot(df, aes(x=HCT116_r2_1_0_lfc, y=HCT116_r1_1_0_lfc,label=new_id)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "R")), color = "goldenrod2", size = 2), dpi = 300)+
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "C")), color = "firebrick3", size = 2), dpi = 300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "HCT116 10% FBS",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5))+
geom_text(x=4.5,y=4.5,label=(round(cor(df$HCT116_r2_1_0_lfc,df$HCT116_r1_1_0_lfc),digits=2)), size=5, color="black")
ggplot(df, aes(x=HCT116_r2_2_0_lfc, y=HCT116_r1_2_0_lfc,label=new_id)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "R")), color = "goldenrod2", size = 2), dpi = 300)+
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "C")), color = "firebrick3", size = 2), dpi = 300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "HCT116 1% FBS",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5))+
geom_text(x=4.5,y=4.5,label=(round(cor(df$HCT116_r2_2_0_lfc,df$HCT116_r1_2_0_lfc),digits=2)), size=5, color="black")
ggplot(df, aes(x=HCT116_r2_3_0_lfc, y=HCT116_r1_3_0_lfc,label=new_id)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "R")), color = "goldenrod2", size = 2), dpi = 300)+
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "C")), color = "firebrick3", size = 2), dpi = 300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "HCT116 =0% FBS",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5))+
geom_text(x=4.5,y=4.5,label=(round(cor(df$HCT116_r2_3_0_lfc,df$HCT116_r1_3_0_lfc),digits=2)), size=5, color="black")
ggplot(df, aes(x=K562_r2_1_0_lfc, y=K562_r1_1_0_lfc,label=new_id)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "R")), color = "goldenrod2", size = 2), dpi = 300)+
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "C")), color = "firebrick3", size = 2), dpi = 300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "K562 10% FBS",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-8, 8), ylim = c(-8, 8))+
geom_text(x=4.5,y=4.5,label=(round(cor(df$K562_r2_1_0_lfc,df$K562_r1_1_0_lfc),digits=2)), size=5, color="black")
ggplot(df, aes(x=K562_r2_2_0_lfc, y=K562_r1_2_0_lfc,label=new_id)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "R")), color = "goldenrod2", size = 2), dpi = 300)+
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "C")), color = "firebrick3", size = 2), dpi = 300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "K562 1% FBS",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-8, 8), ylim = c(-8, 8))+
geom_text(x=4.5,y=4.5,label=(round(cor(df$K562_r2_2_0_lfc,df$K562_r1_2_0_lfc),digits=2)), size=5, color="black")
# 6-thioguanine plots-----
ggplot(df, aes(x=A375_6TG_r2_1_0_lfc, y=A375_6TG_r1_1_0_lfc,label=new_id)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "R")), color = "goldenrod2", size = 2), dpi = 300)+
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "C")), color = "firebrick3", size = 2), dpi = 300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "A375 6-TG",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-10, 10), ylim = c(-10, 10))+
geom_text(x=4.5,y=4.5,label=(round(cor(df$A375_6TG_r2_1_0_lfc, df$A375_6TG_r1_1_0_lfc),digits=2)), size=5, color="black")
ggplot(df, aes(x=K562_r2_3_0_lfc, y=K562_r1_3_0_lfc,label=new_id)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "R")), color = "goldenrod2", size = 2), dpi = 300)+
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "C")), color = "firebrick3", size = 2), dpi = 300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "K562 6-TG",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-10, 10), ylim = c(-10, 10))+
geom_text(x=4.5,y=4.5,label=(round(cor(df$K562_r2_3_0_lfc,df$K562_r1_3_0_lfc),digits=2)), size=5, color="black")
colnames(df)
#dev.off()
library(ggrastr)
# make raster-----
logfc_guides <- list(
geom_hline(yintercept = c(-1, 1), linetype = "dotted", color = "#777777", linewidth=0.1),
geom_vline(xintercept = c(-1, 1), linetype = "dotted", color = "#777777",linewidth=0.1),
geom_hline(yintercept = c(0), linewidth=0.1),
geom_vline(xintercept = c(0),linewidth=0.1))
# read in sgRNA file-----
df_sgRNA <- read.csv(   file = "./sgRNA_aggregated.csv",  na.strings = c("#N/A", "NA"), sep=';')
colnames(df_sgRNA)
# essentiality plots-----
##pdf('Screens_correlation.pdf')
ggplot(df_sgRNA, aes(x=A375_r2_1.LFC, y=A375_r1_1.LFC)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "R")), color = "goldenrod2", size = 2), dpi =300)+
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "C")), color = "firebrick3", size = 2), dpi =300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "A375 10% FBS sgRNA level",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-10, 10), ylim = c(-10, 10))+
geom_text(x=8,y=8,label=(round(cor(df_sgRNA$A375_r2_1.LFC,df_sgRNA$A375_r1_1.LFC),digits=2)), size=5, color="black")
ggplot(df_sgRNA, aes(x=HCT116_r2_1.LFC, y=HCT116_r1_1.LFC)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "R")), color = "goldenrod2", size = 2), dpi =300)+
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "C")), color = "firebrick3", size = 2), dpi =300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "HCT116 10% FBS sgRNA level",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-10, 10), ylim = c(-10, 10))+
geom_text(x=8,y=8,label=(round(cor(df_sgRNA$HCT116_r2_1.LFC,df_sgRNA$HCT116_r1_1.LFC),digits=2)), size=5, color="black")
ggplot(df_sgRNA, aes(x=HCT116_r2_2.LFC, y=HCT116_r1_2.LFC)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "R")), color = "goldenrod2", size = 2), dpi =300)+
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "C")), color = "firebrick3", size = 2), dpi =300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "HCT116 1% FBS sgRNA level",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-10, 10), ylim = c(-10, 10))+
geom_text(x=8,y=8,label=(round(cor(df_sgRNA$HCT116_r2_2.LFC,df_sgRNA$HCT116_r1_2.LFC),digits=2)), size=5, color="black")
ggplot(df_sgRNA, aes(x=HCT116_r2_3.LFC, y=HCT116_r1_3.LFC)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "R")), color = "goldenrod2", size = 2), dpi =300)+
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "C")), color = "firebrick3", size = 2), dpi =300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "HCT116 0% FBS sgRNA level",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-10, 10), ylim = c(-10, 10))+
geom_text(x=8,y=8,label=(round(cor(df_sgRNA$HCT116_r2_3.LFC,df_sgRNA$HCT116_r1_3.LFC),digits=2)), size=5, color="black")
ggplot(df_sgRNA, aes(x=K562_r2_1.LFC, y=K562_r1_1.LFC)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "R")), color = "goldenrod2", size = 2), dpi =300)+
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "C")), color = "firebrick3", size = 2), dpi =300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "K562 10% FBS sgRNA level",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-10, 10), ylim = c(-10, 10))+
geom_text(x=8,y=8,label=(round(cor(df_sgRNA$K562_r2_1.LFC,df_sgRNA$K562_r1_1.LFC),digits=2)), size=5, color="black")
ggplot(df_sgRNA, aes(x=K562_r2_2.LFC, y=K562_r1_2.LFC)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "R")), color = "goldenrod2", size = 2), dpi =300)+
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "C")), color = "firebrick3", size = 2), dpi =300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "K562 1% FBS sgRNA level",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-10, 10), ylim = c(-10, 10))+
geom_text(x=8,y=8,label=(round(cor(df_sgRNA$K562_r2_2.LFC,df_sgRNA$K562_r1_2.LFC),digits=2)), size=5, color="black")
# 6-thioguanine plots-----
ggplot(df_sgRNA, aes(x=A375_6TG_r2_1.LFC, y=A375_6TG_r1_1.LFC)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "R")), color = "goldenrod2", size = 2), dpi =300)+
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "C")), color = "firebrick3", size = 2), dpi =300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "A375 6-TG sgRNA level",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-15, 15), ylim = c(-15, 15))+
geom_text(x=8,y=8,label=(round(cor(df_sgRNA$A375_6TG_r2_1.LFC,df_sgRNA$A375_6TG_r1_1.LFC),digits=2)), size=5, color="black")
ggplot(df_sgRNA, aes(x=K562_r2_3.LFC, y=K562_r1_3.LFC)) +
logfc_guides+
geom_abline(intercept=0, slope=1,linetype = "dotted", color = "#777777",linewidth=0.1)+
rasterise(geom_point(color = "skyblue3", size = 2), dpi = 300) +
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "R")), color = "goldenrod2", size = 2), dpi =300)+
rasterise(geom_point(data = df_sgRNA %>% filter(startsWith(sgrna, "C")), color = "firebrick3", size = 2), dpi =300)+
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x = element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 2", y= "log2(FC) replicate 1")+
labs(title = "K562 6-TG sgRNA level",subtitle = "sORFs: blue, positive control: yellow , negative control:red")+
coord_cartesian(xlim = c(-15, 15), ylim = c(-15, 15))+
geom_text(x=8,y=8,label=(round(cor(df_sgRNA$K562_r2_3.LFC,df_sgRNA$K562_r1_3.LFC),digits=2)), size=5, color="black")
#dev.off()
library(ggrastr)
#heatmap of the 17 candidates median LFC in each repliacte only---------
# grab sgRNAs of all the relevant peptides
#create string for the grep function, copied from Excel
#but took out "PL01056","PL02386","PL02576" bc the same as "PL00931" (ASDURF)
paste("PL01811",
"PS05338",
"PS04125",
"PS05326",
"PS05637",
"PS10094",
"PL00330",
"PS02457",
"PS07624",
"PS01753",
"PS05633",
"PS05634",
"PS04061",
"PS05565",
"PS05879",
"PL00931",
"PL00150", sep = "|", collapse = NULL)
sg_21candidates=df[grep("PL01811|PS05338|PS04125|PS05326|PS05637|PS10094|PL00330|PS02457|PS07624|PS01753|PS05633|PS05634|PS04061|PS05565|PS05879|PL00931|PL00150", df[,1]),]
colnames(df)
#make table with LFC scores only
sg_21candidates_plotvalues=sg_21candidates[,grep("new_id|A375_r1_1_0_lfc|A375_r2_1_0_lfc|HCT116_r1_1_0_lfc|HCT116_r2_1_0_lfc|HCT116_r1_2_0_lfc|HCT116_r2_2_0_lfc|HCT116_r1_3_0_lfc|HCT116_r2_3_0_lfc|K562_r1_1_0_lfc|K562_r2_1_0_lfc|K562_r1_2_0_lfc|K562_r2_2_0_lfc", names(sg_21candidates), value = TRUE)]
#order  by condition instead of replicate
sg_21candidates_plotvalues= sg_21candidates_plotvalues[,c("new_id","A375_r1_1_0_lfc","A375_r2_1_0_lfc","HCT116_r1_1_0_lfc","HCT116_r2_1_0_lfc","HCT116_r1_2_0_lfc","HCT116_r2_2_0_lfc","HCT116_r1_3_0_lfc","HCT116_r2_3_0_lfc","K562_r1_1_0_lfc","K562_r2_1_0_lfc","K562_r1_2_0_lfc","K562_r2_2_0_lfc")]
#make first column row names so can convert to numeric below and then drop 1st column
rownames(sg_21candidates_plotvalues)=sg_21candidates_plotvalues[,1]
sg_21candidates_plotvalues_new=sg_21candidates_plotvalues[ -c(1) ]
#make dataframe numeric, so it can be read by heatmap, have to put 'matrix' at the start so that its not just one vector)
sgRNA_df=matrix(as.numeric(as.matrix(sg_21candidates_plotvalues_new)), ncol = ncol(sg_21candidates_plotvalues_new))
rownames(sgRNA_df)=rownames(sg_21candidates_plotvalues_new)
colnames(sgRNA_df)=colnames(sg_21candidates_plotvalues_new)
class(sgRNA_df)
#use pheatmap
library("RColorBrewer")
library("pheatmap")
#make colour palette, try to get 0 around white
min(sgRNA_df)
max(sgRNA_df)
breaksList = seq(-2.5,1.5,by=0.1) #so are sure that have minimum and maximum included, goes by steps of 0.05
my_palette2<- colorRampPalette(c("darkblue","blue","lightblue","white","red","darkred"))(n=length(breaksList))
#check that colours are as wanted
#pheatmap(sgRNA_df, cluster_rows = F, cluster_cols = F,show_rownames = T,
# border_color= "darkgrey",fontsize_row = 5, main="Median LFC across viability screens",
# col=my_palette2,breaks = breaksList)
#make data.frame for row annotation and colouring, rownames need to match that of the dataframe used for heatmap
annotation_row_bygene=as.data.frame(row.names(sgRNA_df)) #take rownames and put them into column of dataframe
rownames(annotation_row_bygene) <- rownames(sgRNA_df)
colnames(annotation_row_bygene) <- "sORFs"
#change sORF name to that of the gene
annotation_row_bygene$sORFs = as.character(annotation_row_bygene$sORFs)
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PL01811"]="DSE_u_63"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS05338"]="SF3A2_d_13"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS04125"]="MSLN_u_11"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS05326"]="ARMC6_u_14"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS05637"]="CENPBD2P_p_13"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS10094"]="SSC4D_u_15"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PL00330"]="H2BP2_lnc_88"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS02457"]="RCC1_u_20"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS07624"]="RPL15_u_15"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS01753"]="RPLP0_u_15"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS05633"]="CHMP2A_u_46"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS05634"]="CHMP2A_u_12"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS04061"]="NUTF2_u_11"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS05565"]="RPL13A_d_20"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PS05879"]="ZFAS1_lnc_53 "
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PL00931"]="ASNSD1_u_96"
annotation_row_bygene$sORFs[annotation_row_bygene$sORFs=="PL00150"]="SNHG1_lnc_47"
#make colors of the heatmap yunique to sORF and in order of sORF different
newCols <- colorRampPalette(grDevices::rainbow(length(unique(annotation_row_bygene$sORFs))))
mycolors <- newCols(length(unique(annotation_row_bygene$sORFs)))
names(mycolors) <- unique(annotation_row_bygene$sORFs)
mycolors <- list(sORFs = mycolors)
#draw heatmap w sORF numbers and names
#pdf('17micropeptide_hits_medianLFCperreplicate.pdf')
pheatmap(sgRNA_df, cluster_rows = F, cluster_cols = F,show_rownames = T,
border_color= "darkgrey",fontsize_row = 5, main="LFC across viability screens",
col=my_palette2,breaks = breaksList,annotation_row=annotation_row_bygene,annotation_colors = mycolors)
#dev.off()
#draw heatmap only w sORF  names
sgRNA_df_2=sgRNA_df
rownames(sgRNA_df_2)=annotation_row_bygene$sORFs
pheatmap(sgRNA_df_2,cluster_rows = F, cluster_cols = F,show_rownames = T,
border_color= "darkgrey",fontsize_row = 10, main="LFC across viability screens",
col=my_palette2,breaks = breaksList)
#dev.off()
#scatterplot with CCDS overlap
logfc_guides <- list(
geom_hline(yintercept = c(-1, 1), linetype = "dashed", color = "#777777"),
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "#777777"),
geom_hline(yintercept = c(0)),
geom_vline(xintercept = c(0))
)
ggplot(df, aes(x=A375_r2_1_0_lfc, y=A375_r1_1_0_lfc)) +
rasterise(geom_point(color = "#cccccc", alpha = 0.8, size = 0.5), dpi = 300) +
rasterise(geom_point(data = df %>% filter(any_ccds_overlap == TRUE), color = "darkred", size = 0.5), dpi = 300) +
logfc_guides +
coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5)) +
labs(title = "A375 peptide scores", subtitle = "Any CCDS overlap in red")
#density scatterplot
library(RColorBrewer)
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
breaks <- c(2, 10, 50, 200, 1000)
ggplot(df, aes(x=A375_r2_1_0_lfc, y=A375_r1_1_0_lfc)) +
rasterise(geom_bin_2d(binwidth=c(0.05, 0.05)), dpi = 300) +
scale_fill_gradientn(colours=r, trans="log", breaks = breaks) +
logfc_guides +
coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5))
#without controls
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
r <- rf(32)
breaks <- c(2, 10, 50, 200, 1000)
#pdf("densityplot.pdf")
ggplot(df_no_controls, aes(x=A375_r2_1_0_lfc, y=A375_r1_1_0_lfc)) +
rasterise(geom_bin_2d(binwidth=c(0.05, 0.05)), dpi = 300) +
scale_fill_gradientn(colours=r, trans="log", breaks = breaks) +
logfc_guides +
theme(axis.title.x = element_text(color="black", size="14"),axis.title.y = element_text(color="black", size="14"), axis.text.x =
element_text(color="black", size="14"),axis.text.y = element_text(color="black", size="14"))+
labs(x="log2(FC) replicate 1", y= "log2(FC) replicate 2")+
coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5))
#dev.off()
candidates <- c(
)
ggplot(df, aes(x=A375_r2_1_0_lfc, y=A375_r1_1_0_lfc)) +
rasterise(geom_point(color = "#cccccc", alpha = 0.8, size = 0.5), dpi = 300) +
rasterise(geom_point(data = df %>% filter(startsWith(new_id, "RP")), color = "darkred", size = 0.5), dpi = 300) +
logfc_guides +
coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5)) +
labs(title = "A375 peptide scores", subtitle = "RP controls")
candidates <- c(
"PS04061",
"PS05637",
"PL01811",
"PS02457",
"PS01753",
"PL00150",
"PS10094",
"PS04125",
"PS05879",
"PL00330",
"PS05633",
"PS05326",
"PS05565",
"PS05338",
"PS05634",
"PS07624",
# These are the same but I am not deduplicating for these
"PL00931",
"PL01056",
"PL02386",
"PL02576"
)
top_6 <- c(
"PS04061",
"PS05637",
"PL01811",
"PS02457",
"PS01753",
"PL00150"
)
ggplot(df, aes(x=A375_r2_1_0_lfc, y=A375_r1_1_0_lfc)) +
rasterise(geom_point(color = "#cccccc", alpha = 0.8, size = 0.5), dpi = 300) +
rasterise(geom_point(data = df %>% filter(new_id %in% candidates), color = "darkred", size = 0.5), dpi = 300) +
logfc_guides +
coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5)) +
labs(title = "A375 peptide scores", subtitle = "Candidates overlap in red")
library(ggrepel)
top_6 <- c(
"PS04061",
"PS05637",
"PL01811",
"PS02457",
"PS01753",
"PL00150"
)
ggplot(df, aes(x=A375_r2_1_0_lfc, y=A375_r1_1_0_lfc, label=new_id)) +
rasterise(geom_point(color = "#cccccc", alpha = 0.8, size = 0.5), dpi = 300) +
rasterise(geom_point(data = df %>% filter(new_id %in% top_6), color = "navy", size = 0.8), dpi = 300) +
logfc_guides +
geom_label_repel(data = df %>% filter(new_id %in% top_6), color = "navy",
min.segment.length = 0) +
coord_cartesian(xlim = c(-5, 5), ylim = c(-5, 5)) +
labs(title = "A375 peptide scores", subtitle = "Top 6 candidates labeled")
ggscatterhist(results[!grepl("NA",results$sig.by.class.pds),],x ="log2.mock",y="log2.pds",size = 0.2, alpha="psize",color = "sig.by.class.pds",margin.params = list(fill="sig.by.class.pds",color="black",size=0.2),palette=c("#505050","#505050","red2","blue"))
ggscatterhist(results[!grepl("NA",results$sig.by.class.pds),],x ="log2.mock",y="log2.pds",size = 0.4, alpha="psize",color = "sig.by.class.pds",margin.params = list(fill="sig.by.class.pds",color="black",size=0.2),palette=c("#505050","#505050","red2","blue"))
ggscatterhist(results,x ="deseq.mean.pds",y="deseq.lfc.pds",size = 0.2, alpha=0.1,color="deseq.sig.pds",margin.params = list(fill="pro",color="black",size=0.2))
#plot_MA_DHX36 <- rasterize(last_plot(), layers='Point', dpi=600)
mypal <-c("cornflowerblue","orange","red2","#505050")
mypal2 <-c("cornflowerblue","cornflowerblue","orange",,"orange","red2",,"red2","#505050","#505050")
mypal <-c("cornflowerblue","orange","red2","#505050")
mypal2 <-c("cornflowerblue","cornflowerblue","orange","orange","red2","red2","#505050","#505050")
ggdensity(results,x="raw.lfc.pds",fill="class",rug = T,) + stat_compare_means()
ggdensity(results,x="raw.lfc.pds",fill="class",rug = T,)
ggdensity(results,x="raw.lfc.pds",fill="class",rug = T,)
ggdensity(results,x="raw.lfc.pds",color="class", fill="class",rug = T,)
ggscatter(results[!grepl("NA",results$sig.by.class.pds),],x ="log2.mock",y="deseq.lfc.pds",size = 0.2, alpha="psize",color = "sig.by.class.pds",palette=c("#505050","#505050","red2","blue"))
results$sig.by.class.pds <- paste0(results$deseq.sigup.pds,"_",results$class)
results$psize <- 0.01
results$psize[results$deseq.sigup.pds] <- 0.5
ggscatter(results[!grepl("NA",results$sig.by.class.pds),],x ="log2.mock",y="log2.pds",size = 0.2, alpha="psize",color = "sig.by.class.pds",palette=c("#505050","#505050","red2","blue"))
ggscatterhist(results,x ="deseq.mean.pds",y="deseq.lfc.pds",size = 0.2, alpha=0.1,color="deseq.sig.pds",margin.params = list(fill="pro",color="black",size=0.2), palette=myal(C(1,4)))
ggscatterhist(results,x ="deseq.mean.pdc",y="deseq.lfc.pdc",size = 0.2, alpha=0.1,color="class",margin.params = list(fill="class",color="black",size=0.2))
ggscatterhist(results,x ="deseq.mean.pds",y="deseq.lfc.pds",size = 0.2, alpha=0.1,color="deseq.sig.pds",margin.params = list(fill="pro",color="black",size=0.2), palette=myal(c(1,4)))
ggscatterhist(results,x ="deseq.mean.pds",y="deseq.lfc.pds",size = 0.2, alpha=0.1,color="deseq.sig.pds",margin.params = list(fill="pro",color="black",size=0.2), palette=mypal(c(1,4)))
mypal <-c("cornflowerblue","orange","red2","#505050")
mypal2 <-c("cornflowerblue","cornflowerblue","orange","orange","red2","red2","#505050","#505050")
ggscatterhist(results,x ="deseq.mean.pds",y="deseq.lfc.pds",size = 0.2, alpha=0.1,color="deseq.sig.pds",margin.params = list(fill="pro",color="black",size=0.2), palette=mypal(c(1,4)))
ggscatterhist(results,x ="deseq.mean.pds",y="deseq.lfc.pds",size = 0.2, alpha=0.1,color="deseq.sig.pds",margin.params = list(fill="pro",color="black",size=0.2), palette=mypal[c(1,4)])
ggscatterhist(results,x ="deseq.mean.pds",y="deseq.lfc.pds",size = 0.2, alpha=0.1,color="deseq.sig.pds",margin.params = list(fill="deseq.sig.pds",color="black",size=0.2), palette=mypal[c(1,4)])
#plot_MA_DHX36 <- rasterize(last_plot(), layers='Point', dpi=600)
ggscatterhist(results,x ="name",y="deseq.lfc.pds",size = 0.2, alpha=0.1,color="deseq.sig.pds",margin.params = list(fill="name",color="black",size=0.2), palette=mypal[c(1,2,3,4)])
#plot_MA_DHX36 <- rasterize(last_plot(), layers='Point', dpi=600)
ggscatterhist(results,x ="deseq.mean",y="deseq.lfc.pds",size = 0.2, alpha=0.1,color="name",margin.params = list(fill="name",color="black",size=0.2), palette=mypal[c(1,2,3,4)])
ggscatterhist(results,x ="deseq.mean.pds",y="deseq.lfc.pds",size = 0.2, alpha=0.1,color="name",margin.params = list(fill="name",color="black",size=0.2), palette=mypal[c(1,2,3,4)])
G4_bigwigs = c("../data/CutNTag_ChIP-Seq/bw/GSM6634325_E14_Mock_G4.bw",
"../data/CutNTag_ChIP-Seq/bw/GSM6634326_E14_PDS_G4.bw")
G4_bigwigs = c("../data/CutNTag_ChIP-Seq/bw/GSM6634325_E14_Mock_G4.bw",
"../data/CutNTag_ChIP-Seq/bw/GSM6634326_E14_PDS_G4.bw")
cov.G4 <- bw_loci(G4_bigwigs,peaks_bed,labels=c("mock_1","PDS_1"))
cov.G4 <- bw_loci(G4_bigwigs,peaks_bed,labels=c("G4_mock_1","PG4_DS_1"))
cov.G4 <- bw_loci(G4_bigwigs,peaks_bed,labels=c("G4_mock_1","G4_PDS_1"))
results$G4_mock_1 <- cov.G4$G4_mock_1
results$G4_PDS_1 <- cov.G4$G4_PDS_1
results$log2.G4 <- log2(results$G4_mock_1)
ggscatterhist(results,x ="log2.mean.mock",y="log2.mean.G4",size = 0.2, alpha=0.1,color="name",margin.params = list(fill="name",color="black",size=0.2), palette=mypal[c(1,2,3,4)])
ggscatterhist(results,x ="log2.mock",y="log2.G4",size = 0.2, alpha=0.1,color="name",margin.params = list(fill="name",color="black",size=0.2), palette=mypal[c(1,2,3,4)])
ggscatterhist(results,x ="log2.mock",y="log2.G4",size = 0.2, alpha=0.1,color="class",margin.params = list(fill="class",color="black",size=0.2), palette=mypal[c(1,2,3,4)])
G4_bigwigs = c("../data/CutNTag_ChIP-Seq/bw/G4_CnT_NT_batch3_R1.unique.bw")
cov.G4 <- bw_loci(G4_bigwigs,peaks_bed,labels=c("G4_NT""))
cov.G4 <- bw_loci(G4_bigwigs,peaks_bed,labels=c("G4_NT""))
cov.G4 <- bw_loci(G4_bigwigs,peaks_bed,labels=c("G4_NT"))
results$G4_NT <- G4_NT
results$G4_NT <- cov.G4$G4_NT
results$log2.G4 <- log2(results$G4_NT)
ggscatterhist(results,x ="log2.mock",y="log2.G4",size = 0.2, alpha=0.1,color="class",margin.params = list(fill="class",color="black",size=0.2), palette=mypal[c(1,2,3,4)])
#plot_MA_DHX36 <- rasterize(last_plot(), layers='Point', dpi=600)
ggscatterhist(results,x ="log2.mock",y="log2.G4",size = 0.2, alpha=0.1,color="pro",margin.params = list(fill="pro",color="black",size=0.2), palette=mypal[c(1,2,3,4)])
#plot_MA_DHX36 <- rasterize(last_plot(), layers='Point', dpi=600)
ggscatterhist(results,x ="log2.mock",y="log2.G4",size = 0.2, alpha=0.1,color="pro",margin.params = list(fill="pro",color="black",size=0.2), palette=mypal[c(1,2,3,4)], facet.by="pro")
ggscatterhist(results,x ="log2.mock",y="log2.G4",size = 0.2, alpha=0.1,color="pro",margin.params = list(fill="pro",color="black",size=0.2), palette=mypal[c(1,2,3,4)])
#plot_MA_DHX36 <- rasterize(last_plot(), layers='Point', dpi=600)
ggscatterhist(results,x ="log2.mock",y="log2.G4",size = 0.2, alpha=0.1,color="pro",margin.params = list(fill="pro",color="black",size=0.2), palette=mypal[c(1,2,3,4)])
#plot_MA_DHX36 <- rasterize(last_plot(), layers='Point', dpi=600)
ggboxplot(results,x ="pro",y="raw.lfc.pds",fill="class") + stat_compare_means()
ggviolin(results,x ="pro",y="raw.lfc.pds",fill="class")
ggviolin(results,x ="pro",y="mean.moack",fill="class")
ggviolin(results,x ="pro",y="mean.mock",fill="class")
ggboxplot(results,x ="pro",y="mean.mock",fill="class")
ggboxplot(results,x ="class",y="mean.mock",fill="class")
ggboxplot(results,x ="class",y="mean.mock",fill="class",palette=mypal )
results$class <- factor(results$class,leves=c("CTCF_and_G4","CTCF_not_G4"))
results$class <- factor(results$class,levels=c("CTCF_and_G4","CTCF_not_G4"))
mypal <-c("cornflowerblue","orange","red2","darkgreen","#505050",)
mypal <-c("cornflowerblue","orange","red2","darkgreen","#505050")
mypal2 <-c("cornflowerblue","cornflowerblue","orange","orange","red2","red2","darkgreen","darkgreen""#505050","#505050")
mypal <-c("cornflowerblue","orange","red2","darkgreen","#505050")
mypal2 <-c("cornflowerblue","cornflowerblue","orange","orange","red2","red2","darkgreen","darkgreen""#505050","#505050")
mypal2 <-c("cornflowerblue","cornflowerblue","orange","orange","red2","red2","darkgreen","darkgreen","#505050","#505050")
ggboxplot(results,x ="class",y="mean.mock",fill="class",palette=mypal )
ggboxplot(results,x ="class",y="mean.mock",fill="class",palette=mypal ) + coord_cartesian(ylim=c(0,10))
ggviolin(results,x ="class",y="mean.mock",fill="class",palette=mypal ) + coord_cartesian(ylim=c(0,10))
source("~/GitHub/G4-CTCF/codes/plot_figures.Rmd")
